@font-face {
  font-family: "Blogger Sans" sans-serif;
  src: url("resources/fonts/BloggerSans-Bold.woff2") format("woff2");
  font-weight: bold;
}

@font-face {
  font-family: "Blogger Sans" sans-serif;
  src: url("resources/fonts/BloggerSans-Medium.woff2") format("woff2");
  font-weight: normal;
}

html {
  font-family: "Blogger Sans";
  color: white;
}

body {
  background-image: url("/resources/images/background.png");
  background-position: center center;
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: 100% 100%;
  background-color: #3d4e52;
}

.tournaments-stats-container {
  gap: 1.5vw;
  font-size: 2vw;
  padding: 5px 15px 5px 15px;
  background: linear-gradient(to right, #3d4e52 0%, #da7168 100%);
  border-radius: 3vw;
  width: 55vw;
  justify-content: space-around;
  margin-left: -3vw;
}

.nick-container {
  text-transform: uppercase;
  line-height: 100%;
  justify-content: center;
  font-size: 5vw;
  width: 30vw;
}

.presentation-container {
  margin-top: 5vh;
  width: 90vw;
  justify-content: space-between;
}

.role_icon {
  margin-right: 1vw;
  width: 3vw;
  height: 3vw;
}

.avg-point-stat-item {
}

.avg-points-stats-presentation-container {
  width: 50vw;
  justify-content: space-between;
  margin-bottom: 5vh;
}

#player_photo {
  object-fit: cover;
  width: 30vw;
  height: 30vw;
}

.upper-line-container {
  margin-top: -5vh;
  font-weight: bold;
  gap: 10vw;
  width: 90vw;
}

.stats-presentation-container {
  font-weight: bold;
  flex-direction: column;
  font-size: 1.6vw;
}

.first-blood-stats-presentation-container {
  width: 50vw;
  justify-content: space-between;
  margin-bottom: 10vh;
}

table {
  width: 50vw;
}

.intercept_player_photo {
  justify-self: center;
}

.intercept-stats-presentation-container {
  gap: 2vw;
  margin-top: 10vh;
}

.intercept-stat-item-card-title {
  text-align: center;
  font-size: 1vw;
  font-weight: normal;
  margin-top: 0.2vw;
  width: 100%;
}

.intercept-stat-item-card-photo {
  background-color: rgb(105, 2, 2);
  border-radius: 50%;
  overflow: hidden;
}

.intercept-stat-item-cards-container {
  gap: 1vw;
}

.intercept-stat-item-card {
  width: 5vw;
  height: 5vw;
}

.intercept-stat-item-title {
  text-align: center;
  font-size: 1.5vw;
  margin-bottom: 1vh;
}

.content-wrapper {
  justify-content: center;
  flex-direction: column;
  width: 100%;
  height: 100%;
  top: 0px;
  left: 0px;
  position: fixed;
  padding: 30px;
  margin-left: -2vw;
}

.flex-container {
  display: flex;
  align-items: center;
}

.content-container {
  flex-direction: column;
}
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
   Убираем внутренние отступы слева тегам списков,
   у которых есть атрибут class
  */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
   Убираем внешние отступы body и двум другим тегам,
   у которых есть атрибут class
  */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
   Убираем внешние отступы вертикали нужным тегам,
   у которых есть атрибут class
  */
:where(h1, h2, h3, h4, h5, h6, p, ul, ol, dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
   Убираем стандартный маркер маркированному списку,
   у которого есть атрибут class
  */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
   Обнуляем вертикальные внешние отступы параграфа,
   объявляем локальную переменную для внешнего отступа вниз,
   чтобы избежать взаимодействие с более сложным селектором
  */
p {
  --paragraphMarginBottom: 24px;

  margin-block: 0;
}

/**
   Внешний отступ вниз для параграфа без атрибута class,
   который расположен не последним среди своих соседних элементов
  */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
   Упрощаем работу с изображениями и видео
  */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
   Наследуем свойства шрифт для полей ввода
  */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
  height: 100%;
  /**
     Убираем скачок интерфейса по горизонтали
     при появлении / исчезновении скроллбара
    */
  scrollbar-gutter: stable;
}

/**
   Плавный скролл
  */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
  min-height: 100%;
  /**
     Унифицированный интерлиньяж
    */
  line-height: 1.5;
}

/**
   Нормализация высоты элемента ссылки при его инспектировании в DevTools
  */
a:where([class]) {
  display: inline-flex;
}

/**
   Курсор-рука при наведении на элемент
  */
button,
label {
  cursor: pointer;
}

/**
   Приводим к единому цвету svg-элементы
   (за исключением тех, у которых уже указан
   атрибут fill со значением 'none' или начинается с 'url')
  */
:where([fill]:not([fill="none"], [fill^="url"])) {
  fill: currentColor;
}

/**
   Приводим к единому цвету svg-элементы
   (за исключением тех, у которых уже указан
   атрибут stroke со значением 'none')
  */
:where([stroke]:not([stroke="none"], [stroke^="url"])) {
  stroke: currentColor;
}

/**
   Чиним баг задержки смены цвета при взаимодействии с svg-элементами
  */
svg * {
  transition-property: fill, stroke;
}

/**
   Приведение рамок таблиц в классический 'collapse' вид
  */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
   Удаляем все анимации и переходы для людей,
   которые предпочитают их не использовать
  */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
